How to Use 7-base_geometry.py
=============================

This modules defines a base geometry class BaseGeometry.

Instantiation
=============

``BaseGeometry`` includes no attributes, and accordingly is initialized 
with no arguments.

::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
    >>> bg = BaseGeometry()
    >>> type(bg)
    <class '7-base_geometry.BaseGeometry'>
    >>> bg.integer_validator()
    ValueError: 2 arguments required
    >>> bg.integer_validator("age")
    ValuError: 2 arguments required
    >>> bg.area()
    Traceback (most recent call last)
    ....
    Exception: area() is not implemented
    >>> bg.integer_validator("age", 1)
    1
    >>> bg.integer_validator("age", 0)
    ValueError: age must be greater than 0
    >>> bg.integer_validator("age", -4)
    ValueError: age must be greater than 0
    >>> bg.integer_validator("age", [4])
    TypeError: age must be an integer
    >>> bg.integer_validator("age", {3, 5})
    TypeError: age must be an integer
    >>> bg.integer_validator("age", True)
    TypeError: age must be an integer
    >>> bg.integer_validator("age", None)
    ValueError: age must be greater than 0
    >>> bg.integer_validator("age", "6")
    TypeError: age must be an integer



::

    >>> print(bg) # doctest: +ELLIPSIS
    <7-base_geometry.BaseGeometry object at ...>

In fact, any arguments supplied to an instantiation of ``BaseGeometry`` results
in a TypeError.

"""
